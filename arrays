#find duplicate number
https://leetcode.com/problems/find-the-duplicate-number/

class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        t=h=nums[0]
        t=nums[t]
        h=nums[nums[h]]
        while t!=h:
            t=nums[t]
            h=nums[nums[h]]
        t=nums[0]
        while t!=h:
            t=nums[t]
            h=nums[h]
        return t

# sort colors [0,0,1,1,2,2,2]
https://leetcode.com/problems/sort-colors/

class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        l,r=0,len(nums)-1
        i=0
        def swap(i,j):
            temp=nums[i]
            nums[i]=nums[j]
            nums[j]=temp

        while i<=r:
            if nums[i]==0:
                swap(l,i)
                l+=1
            elif nums[i]==2:
            
set matrix zeroes
https://leetcode.com/problems/set-matrix-zeroes/submissions/876589944/

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        m,n=len(matrix),len(matrix[0])
        row,col=[1]*m,[1]*n
        for r in range(m):
            for c in range(n):
                if matrix[r][c]==0:
                    row[r]=0
                    col[c]=0
        for r in range(m):
            if row[r]==0:
                matrix[r]=[0]*n
        for c in range(n):
            if col[c]==0:
                for i in range(m):
                    matrix[i][c]=0
        return matrix
                swap(i,r)
                r-=1
                i-=1
            i+=1
         
 # duplicates in sorted array
 https://leetcode.com/problems/remove-duplicates-from-sorted-array/
 
 class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        l=1
        for r in range(1,len(nums)):
            if nums[r]!=nums[r-1]:
                nums[l]=nums[r]
                l+=1
        return l
        
 move zeroes       
https://leetcode.com/problems/move-zeroes/

class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        i=0
        j=0
        while j<len(nums):
            if nums[j]==0:
                j+=1
            else:
                temp=nums[i]
                nums[i]=nums[j]
                nums[j]=temp
                i+=1
                j+=1
        return nums

https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
best time to buy sell stocks

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        i,j=0,1
        maxp=0
        while j<len(prices):
            if prices[i]<prices[j]:
                profit=prices[j]-prices[i]
                maxp=max(maxp,profit)
            else:
                i=j
            j+=1
        return maxp


chocolate distribution (geekforgeeks)
https://www.geeksforgeeks.org/chocolate-distribution-problem/

def findMinDiff(arr, n, m):
    if n==0 or m==0:
        return 0
    if m>n:
        return -1
    arr.sort()
    min_d=arr[n-1]-arr[0]
    for i in range(len(n)-m+1):
        min_d=min(min_d,arr[i+m-1]-arr[i])
    return min_d
    
    
    
