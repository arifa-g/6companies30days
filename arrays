#find duplicate number

class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        t=h=nums[0]
        t=nums[t]
        h=nums[nums[h]]
        while t!=h:
            t=nums[t]
            h=nums[nums[h]]
        t=nums[0]
        while t!=h:
            t=nums[t]
            h=nums[h]
        return t

# sort colors [0,0,1,1,2,2,2]

class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        l,r=0,len(nums)-1
        i=0
        def swap(i,j):
            temp=nums[i]
            nums[i]=nums[j]
            nums[j]=temp

        while i<=r:
            if nums[i]==0:
                swap(l,i)
                l+=1
            elif nums[i]==2:
                swap(i,r)
                r-=1
                i-=1
            i+=1
         
 # duplicates in sorted array
 
 class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        l=1
        for r in range(1,len(nums)):
            if nums[r]!=nums[r-1]:
                nums[l]=nums[r]
                l+=1
        return l
